#include<iostream>
#include<iomanip>
using namespace std;

void cekirdek_input(int matris[][5], int cekirdek_boyutu, int artis_miktari);
void print(int matris[][5], int x);

int main()
{
	struct Operation //define a new variable type "Operation"
	{
		int giris[5][5] = { 3,2,5,1,4, //Our predefined matris
							6,2,1,0,7,
							3,0,0,2,0,								// If change "giris" matris bigger than size of 5 
							1,1,3,2,2,								
							0,3,1,0,0 };
		int cekirdek[5][5]; // User defined matris
		int cikis[5][5]; // Resultant matris
		int cekirdek_boyut; // for defining size of cekirdek matris
		int artis_miktari; // our slip rate
	};
	
	Operation operation;
	
	int i, j, x, y, z; // variables which will be used inside of "for" loops
	int counter1 = 0,counter2 = 0,total = 0; // our counter for "cikis" matris and i,j starting values
	int cikis_size;
	
	cout << "Cekirdek matrisin boyutunu giriniz: ";
	cin >> operation.cekirdek_boyut;//takes "cekirdek" matrises size

	if (operation.cekirdek_boyut == 5)//controls if matris size is equal to 5 if it is then forbid to take slip rate
	{
		cout << "5x5 lik bir matriste kayma yapamazsiniz..." << endl;
		cikis_size = 1;
	}
	else //if matris size is not equal to 5 then takes a slip rate
	{
		cout << "Kayma miktarini giriniz: ";
		cin >> operation.artis_miktari;
	}

	while (operation.cekirdek_boyut + operation.artis_miktari > 5) //controls if our "cekirdek" matris goes beyond border of our "giris" matris while slipping 
	{
		cout << "lutfen daha kucuk bir cekirdek boyutu ve kayma miktari giriniz." << endl;
		cout << "Cekirdek matrisin boyutunu giriniz: "; cin >> operation.cekirdek_boyut;
		cout << "Kayma miktarini giriniz: "; cin >> operation.artis_miktari;
	}

	cekirdek_input(operation.cekirdek, operation.cekirdek_boyut, operation.artis_miktari);//calls our input function to take elements of our "cekirdek" matris

	cikis_size = ((5 - operation.cekirdek_boyut) / operation.artis_miktari) + 1; // calculates our "cikis" matris size
	
	while (counter2 < cikis_size) // our most outer loop which controls "cikis" matris rows
	{
		for (z = 0; z < cikis_size; z++)//our second "cikis" matris controller which controls columns
		{
			for (i = operation.artis_miktari * counter2, x = 0; i < 5, x < operation.cekirdek_boyut; i++, x++)// our row controller loop
			{
				for (j = operation.artis_miktari * counter1, y = 0; j < 5, y < operation.cekirdek_boyut; j++, y++)// our column controller loop
				{
					total += operation.cekirdek[x][y] * operation.giris[i][j];// multiplies elements of cekirdek and giris matris and add them to cikis matris
					operation.cikis[counter2][counter1] = total;
				}
			}
			total = 0;
			counter1++;
		}
		counter2++;
		counter1 = 0;	
	}

	print(operation.cikis, cikis_size);// simpley print out our matrises
	
	system("pause");
	return 0;
}
void print(int matris[][5], int x)// print fucntion for matrises
{
	int i, j;
	for (i = 0; i < x; i++)
	{
		for (j = 0; j < x; j++)
		{
			cout <<setw(4) << matris[i][j];
		}
		cout << endl;
	}
}
void cekirdek_input(int matris[][5],int cekirdek_boyut, int artis_miktari)// our matris input function
{
	
	for (int i = 0; i < cekirdek_boyut ; i++)
	{
		for (int j = 0; j < cekirdek_boyut; j++)
		{
			cout << "cekirdek[" << i + 1 << "][" << j + 1 << "]: ";
			cin >> matris[i][j];
		}
	}
}
